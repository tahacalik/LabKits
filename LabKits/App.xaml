<Application x:Class="LabKits.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LabKits"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="8" Color="#96F7B1" />
        <SolidColorBrush x:Key="10" Color="#20884A" />
        <SolidColorBrush x:Key="14" Color="#FF07F9B7" />
        <SolidColorBrush x:Key="18" Color="#FF5AB7F7" />
        <SolidColorBrush x:Key="Main" Color="#2d7fac" />
        <SolidColorBrush x:Key="20" Color="#6a93aa" />
        <SolidColorBrush x:Key="15" Color="#FF470606" />
        <SolidColorBrush x:Key="5" Color="Red" />

      
        <!--There are styles and design parts in the form interface.-->
        <!--Mini butonlar-->
        <Style x:Key="minibuton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="35"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="{StaticResource Main}"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                BorderThickness="0,0,0,0"
                                BorderBrush="White"
                                Background="{StaticResource Main}">
                            
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="white" />
                                <Setter Property="Foreground" Value="{StaticResource Main}"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu menubuton-->
        <Style x:Key="menubuton" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="{StaticResource Main}"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
                <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border"
                                BorderThickness="10,0,0,0"
                                BorderBrush="{x:Null}"
                                Background="{x:Null}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource 20}" />
                                <Setter TargetName="border" Property="Background" Value="{StaticResource 20}" />
                                <Setter TargetName="border" Property="BorderThickness" Value="10,0,0,0" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                                <Setter TargetName="border" Property="Background" Value="{StaticResource 20}" />
                                <Setter TargetName="border" Property="BorderThickness" Value="10,0,0,0" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Menu kitEkle-->
        <Style x:Key="kitEkle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="0,0,15,1"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border"
                                BorderThickness="1,1,1,1"
                                BorderBrush="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="white" />
                                <Setter TargetName="border" Property="Background" Value="{StaticResource 20}" />
                                <Setter TargetName="border" Property="BorderThickness" Value="1,1,1,1" />
                                <Setter Property="Foreground" Value="white"/>
                            </Trigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Box-->
        <!-- Flat ComboBox -->

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="White" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="White" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{StaticResource 20}" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="White" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{StaticResource 20}"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource 20}"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="White"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="White"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource 5}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource 5}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource 20}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource 18}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalContentAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="{StaticResource Main}" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="White"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource 5}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Rounded Buton-->
        <Style x:Key="YuvarlakButon" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Daire" Width="50" Height="50" Fill="{StaticResource Main}"/>
                            <Label x:Name="Label" Content="+" Foreground="White" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Daire" Property="Width" Value="55"/>
                                <Setter TargetName="Daire" Property="Height" Value="55"/>
                                <Setter TargetName="Daire" Property="Fill" Value="{StaticResource 8}"/>
                                <Setter TargetName="Label" Property="FontSize" Value="22" />
                                <Setter TargetName="Label" Property="Content" Value="EKLE"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="YuvarlakButon2" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Daire2" Width="50" Height="50" Fill="Red"/>
                            <Label x:Name="Label2" Content="X" Foreground="White" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Daire2" Property="Width" Value="50"/>
                                <Setter TargetName="Daire2" Property="Height" Value="50"/>
                                <Setter TargetName="Daire2" Property="Fill" Value="{StaticResource 15}"/>
                                <Setter TargetName="Label2" Property="FontSize" Value="30" />
                                <Setter TargetName="Label2" Property="Content" Value="X"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AraButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Daire2" Width="50" Height="50" Fill="{StaticResource 14}"/>
                            <Label x:Name="Label2" Content="" Foreground="White" FontSize="9" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Daire2" Property="Width" Value="50"/>
                                <Setter TargetName="Daire2" Property="Height" Value="50"/>
                                <Setter TargetName="Daire2" Property="Fill" Value="{StaticResource 10}"/>
                                <Setter TargetName="Label2" Property="FontSize" Value="22" />
                                <Setter TargetName="Label2" Property="Content" Value=""/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GuncelleButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="Daire2" Width="50" Height="50" Fill="{StaticResource 14}"/>
                            <Label x:Name="Label2" Content="" Foreground="White" FontSize="9" HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                            <ContentControl Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Daire2" Property="Width" Value="50"/>
                                <Setter TargetName="Daire2" Property="Height" Value="50"/>
                                <Setter TargetName="Daire2" Property="Fill" Value="{StaticResource 10}"/>
                                <Setter TargetName="Label2" Property="FontSize" Value="22" />
                                <Setter TargetName="Label2" Property="Content" Value=""/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Donme-->
        <Style x:Key="RotationEffect" TargetType="Ellipse">
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Style.Triggers>

                <EventTrigger RoutedEvent="Loaded">

                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:10" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
          
        <!--DataGrid-->

        <Style x:Key="GridTip1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource KolonHeaderTipi1}"/>
            <Setter Property="CellStyle" Value="{DynamicResource KolonSatirTipi1}"/>

        </Style>
        <Style x:Key="KolonHeaderTipi1" TargetType="DataGridColumnHeader">
                <Setter Property="Height" Value="37"/>
                <Setter Property="Background" Value="{StaticResource Main}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="5,5,5,5"/>
                <Setter Property="BorderBrush" Value="{StaticResource 20}"/>
                <Setter Property="BorderThickness" Value="4,0,0,0"/>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ToolTip" Value="Tıkla ve Grupla"/>
                    </Trigger>
                </Style.Triggers>
        </Style>

        <Style x:Key="KolonSatirTipi1" TargetType="DataGridCell">
            <Setter Property="Background" Value="{x:Null}"/>

            <Setter Property="BorderThickness" Value="4,0,0,0"/>
            <Setter Property="BorderBrush" Value="{StaticResource 20}"/>
            <Setter Property="Padding" Value="5,5,5,5"/>
            <Setter Property="Foreground" Value="{StaticResource 10}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource Main}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource 8}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>
